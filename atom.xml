<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://POssichen.github.io</id>
    <title>陈冠朋 の Blog</title>
    <updated>2020-03-18T04:11:49.022Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://POssichen.github.io"/>
    <link rel="self" href="https://POssichen.github.io/atom.xml"/>
    <logo>https://POssichen.github.io/images/avatar.png</logo>
    <icon>https://POssichen.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 陈冠朋 の Blog</rights>
    <entry>
        <title type="html"><![CDATA[Keynote快捷操作]]></title>
        <id>https://POssichen.github.io/post/keynote-kuai-jie-cao-zuo/</id>
        <link href="https://POssichen.github.io/post/keynote-kuai-jie-cao-zuo/">
        </link>
        <updated>2020-02-26T07:41:19.000Z</updated>
        <content type="html"><![CDATA[<p>Command + N   新建文件<br>
Command + O   打开文件<br>
Command + W  关闭当前文件<br>
Command + Z   撤销<br>
Command + Shift + Z   重做<br>
Command + A   全部选中<br>
Command + X   剪切<br>
Command + C   拷贝<br>
Command + V   粘贴<br>
Command + R   打开标尺<br>
Command + H   最小化窗口<br>
Command + D   直接复制选中幻灯片一份</p>
<p>选中元素 + Shift + 鼠标拖动   沿米字格方向之一移动元素<br>
选中元素 + Shift + 鼠标拖动元素控制点   以对边或对角控制点为定边或者定点等比放大或缩小<br>
选中元素 + Shift + Option + 鼠标拖动元素控制点   以元素中心为定点等比放大或缩小<br>
选中元素 + Option + 鼠标拖动   复制元素一份<br>
选中元素 + Option + Shift + 鼠标拖动   沿米字格方向之一复制元素一份</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[疫情期间校园网课思考]]></title>
        <id>https://POssichen.github.io/post/yi-qing-qi-jian-xiao-yuan-wang-ke-si-kao/</id>
        <link href="https://POssichen.github.io/post/yi-qing-qi-jian-xiao-yuan-wang-ke-si-kao/">
        </link>
        <updated>2020-02-16T07:17:52.000Z</updated>
        <content type="html"><![CDATA[<pre><code>    疫情肆虐了2个月有余，很直接影响了返工和返校人群，这两个群体都是聚集性较强，容易引发大规模传染。所以工作人群率先采用了远程办公的方式，而学生群体均接到了网络授课的通知，并且网络授课的时间跨越也很长，从3月份到5月份，无论是小学还是大学，都得这样妥协。
    这次的大规模远程办公和网课必然会刺激相关的行业发展，网课采用的都是现有的直播平台进行授课，这是很多家庭没有体会过的，往常上课都是面对面在学校里面，就算是出去外面补课也是有一半是面对面授课，并且价格还比较高。当然，也有一部分补习班是采用了网络直播或者录播这样的形式进行授课，我妹妹的学而思教育机构就是采用这种方式。我觉得这是一个非常好的推广远程教育、补习的机会。目前K12领域传统教育补习领域的玩家有腾讯的企鹅辅导、新东方、好未来、猿辅导......而新时代的编程教育的代表有编程猫、、、......目前来看编程K12还不是刚需，复购的几率不高，但是从国际环境来看，各个国家都将编程教育加入了基础教育之中，中国加入是迟早的事情，并且我觉得很有概率是必考科目，那么现阶段对这个领域进行铺路就显得很有远见。相比与传统的K12教育，我觉得编程K12更要抓住机会在这个全民网课的时候推广自己，占领要地。</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Indicators 指标]]></title>
        <id>https://POssichen.github.io/post/mac-os-indicators-zhi-biao/</id>
        <link href="https://POssichen.github.io/post/mac-os-indicators-zhi-biao/">
        </link>
        <updated>2020-02-05T09:33:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="level-indicators-级别指示器">Level Indicators 级别指示器</h3>
<p>级别指示器以图形的方式表示数值范围内的特定值。</p>
<ol>
<li>在视图中而不是窗口中使用级别指示器。</li>
<li>容量指示器有连续和离散两种表现形式。</li>
<li>可以通过更改填充颜色来提醒用户注意有效值。</li>
<li>连续形式时才使用刻度线，离散时不使用刻度线。</li>
<li>如果使用刻度线需要至少标注第一个刻度和最后一个刻度。</li>
<li>评级指示器可以促进有效排名。</li>
<li>如果使用自定义符号替换评级星号，那要确保目的明确。</li>
<li>相关性指示器使用一系列竖线传达相关性。</li>
</ol>
<h3 id="progress-indicators-进度指示器">Progress Indicators 进度指示器</h3>
<p>进度指示器让用户知道应用尚未停止，并让用户们知道将等待多长时间。进度指示器有两种不同的样式：条形指示器和旋转指示器。</p>
<ol>
<li>存在取消按钮让用户自行停止处理。</li>
<li>始终准确报告进度。</li>
<li>将进度指示器的外观与应用进行匹配。</li>
<li>任务完成后自动隐藏进度指示器。</li>
<li>保持不确定的进度指示器移动，以便用户了解正在发生的事情。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Selectors 选择器]]></title>
        <id>https://POssichen.github.io/post/mac-os-selectors-xuan-ze-qi/</id>
        <link href="https://POssichen.github.io/post/mac-os-selectors-xuan-ze-qi/">
        </link>
        <updated>2020-02-04T09:18:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="color-wells-色墙">Color Wells 色墙</h3>
<ol>
<li>色块支持拖放和选择。</li>
<li>支持用户调整文本、形状、参考线和其他元素的颜色。</li>
</ol>
<h3 id="date-pickers-日期选择器">Date Pickers 日期选择器</h3>
<p>日期选择器有两种样式：文本和图形。用户可以通过日期选择器来选择日期、时间或者二者的范围，同时支持公历和非公历。</p>
<h3 id="image-wells-图墙">Image Wells 图墙</h3>
<ol>
<li>必要时还原为默认图像。</li>
<li>必须选择一个图像视图对象才能执行删除、复制和粘贴功能。</li>
</ol>
<h3 id="path-conterols-路径控制">Path Conterols 路径控制</h3>
<p>路径控件显示所选文件或文件夹的文件系统路径。</p>
<ol>
<li>路径控件有两种样式：线性列表和弹出样式。</li>
<li>在窗口主题而不是窗口框架中使用路径控件。</li>
<li>只有在可以为用户提供价值的时候才使用路径控件。</li>
</ol>
<h3 id="segmented-controls-分段控件">Segmented Controls 分段控件</h3>
<ol>
<li>分段控件可以启用一个或多个选择。</li>
<li>一般情况下需要保持宽度相等。</li>
<li>考虑使用标签来增加清晰度。</li>
<li>当分段控件出现在工具栏中的时候需要使用适当的样式</li>
<li>需要视图切换时需要使用选项卡视图而不是分段控件。</li>
<li>分段控件不可用于添加和删除操作。</li>
<li>使用名词或名词短语作为句段文本。</li>
<li>避免在分段控件中混合文本和图标。</li>
<li>最好在分段控件中使用系统提供的图标。</li>
</ol>
<h3 id="sliders-滑杆">Sliders 滑杆</h3>
<p>滑块为水平、垂直和圆形轨道，使用户在值的最大最小范围内进行选择。</p>
<ol>
<li>滑块的值变化的同时提供实时的反馈。</li>
<li>可以使用相应的文本字段和步进器来补充滑块。</li>
<li>使用刻度线可以提高清晰度和准确性。</li>
<li>可以使用图标来说明最大值和最小值的含义。</li>
</ol>
<h3 id="steppers-步进器">Steppers 步进器</h3>
<p>步进器使用户可以递增地增加或减少数字，如日期、时间值....步进器位于显示其当前值的字段旁边，因为步进器本身不显示值。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Fields and Labels 字段和标签]]></title>
        <id>https://POssichen.github.io/post/mac-os-fields-and-labels-zi-duan-he-biao-qian/</id>
        <link href="https://POssichen.github.io/post/mac-os-fields-and-labels-zi-duan-he-biao-qian/">
        </link>
        <updated>2020-02-03T08:57:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="combo-boxes-组合框">Combo Boxes 组合框</h3>
<p>组合框在单个控件中结合了文本字段和下拉按钮。用户可以在字段中输入自定义值或者从预定义值中进行选择。用户输入自定义值时，不会将其添加到选择列表中。</p>
<ol>
<li>使用列表中有意义的默认值填充该字段。</li>
<li>使用介绍性标签可以使用户知道预期的值。</li>
<li>根据用户的输入提供相关的选择。</li>
<li>限制用户只允许选择一个值，不允许多选。</li>
<li>确保文本字段不超出框位。</li>
</ol>
<h3 id="labels-标签">Labels 标签</h3>
<p>标签时描述屏幕上的界面元素或提供简短信息的静态文本字段。</p>
<ol>
<li>使标签简短易读。</li>
<li>引入控件时使用冒号。</li>
<li>使用系统提供的标签颜色来传达重要性。</li>
<li>使用户协议选择标签进行复制。</li>
</ol>
<h3 id="search-fields-搜索字段">Search Fields 搜索字段</h3>
<p>搜索框一般位于工具栏的最右方。</p>
<ol>
<li>显示取消搜索按钮。</li>
<li>必要的时候显示搜索字段相关的提示。</li>
<li>在适当的时间去搜索，可以在输入内容后进行搜索也可以在用户点击Enter后进行搜索。</li>
<li>考虑隐私性。可能用户不希望看到所有搜索历史。</li>
<li>允许用户自行选择过滤的属性和规则。</li>
<li>搜索的属性中选择适当的按钮外观。</li>
</ol>
<h3 id="text-fields-文字字段">Text Fields 文字字段</h3>
<p>文字栏时一个圆角矩形区域，用户可以在其中输入或编辑一行或者多行文本。</p>
<ol>
<li>使用介绍性标签或占位符文本来帮助用户理解输入内容。</li>
<li>在用户输入的时候就开始验证准确性。</li>
<li>使用数字格式来辅助数字数据的输入。</li>
<li>相应地调整换行符。</li>
<li>敏感的文本使用安全的文本字段。</li>
<li>考虑使用拓展工具来显示不可见的文本完整信息。</li>
<li>尽可能使文本字段的大小与预期文本的数量匹配。</li>
<li>预留合适的文字间隔。</li>
</ol>
<h3 id="token-fields-令牌字段">Token Fields 令牌字段</h3>
<p>令牌字段是在文字栏中存在的多项选择器。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Menus 菜单]]></title>
        <id>https://POssichen.github.io/post/mac-os-menus-cai-dan/</id>
        <link href="https://POssichen.github.io/post/mac-os-menus-cai-dan/">
        </link>
        <updated>2020-02-02T08:31:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="menu-anatomy-菜单剖析">Menu Anatomy 菜单剖析</h3>
<p>菜单显示用户可以从中选择的项目列表。菜单中的一项称为菜单项。菜单还可以包含分隔符，菜单项可以包含图标和符号，如复选标记。默认情况下，所有菜单都采用半透明样式。</p>
<ol>
<li>菜单类型有3种：Contextual Menus、Dock Menus、Menu Bar Menus。</li>
<li>即使菜单项不可用时也要保持菜单的可见性。</li>
<li>菜单标题尽可能短且清晰。</li>
<li>菜单标题使用文本而不是图标。</li>
<li>避免在菜单项标题中使用文章。</li>
<li>禁用不可用菜单。使用灰色。</li>
<li>考虑将键盘快捷键分配给菜单栏中的常用菜单项。</li>
<li>限制子菜单的深度和长度。一般不超过5层。</li>
<li>使用子菜单而不是缩进菜单项。</li>
<li>使用分割线创建视觉上不用的相关菜单项组。</li>
<li>将最常用的项目放在菜单顶部。</li>
<li>对相互依赖的菜单项进行分组。</li>
<li>将相似的动作组合在一起，使人们可以轻松找到菜单项。</li>
<li>合并相关菜单项。</li>
<li>注意菜单的长度。</li>
<li>尽量减少滚动菜单。</li>
<li>使用熟悉的图标。避免在菜单中使用自定义符号。</li>
<li>使用复选标记指示当前处于活动状态。</li>
<li>使用破折号表示属性仅适用于部分选择。</li>
</ol>
<h3 id="contextual-menus-上下文菜单">Contextual Menus 上下文菜单</h3>
<p>上下文菜单或快捷菜单使用户可以访问与当前上下文相关的常用命令。</p>
<ol>
<li>将菜单层次限制为1个或者2个级别。</li>
<li>不在菜单中设置默认项。</li>
</ol>
<h3 id="dock-menus-底栏菜单">Dock Menus 底栏菜单</h3>
<ol>
<li>提供特定于应用程序的菜单项。</li>
<li>确保Dock菜单项在应用程序的其他位置也可用。</li>
<li>将特定于应用程序的菜单项放在系统提供的菜单项上方。</li>
</ol>
<h3 id="menu-bar-menus-菜单栏菜单">Menu Bar Menus 菜单栏菜单</h3>
<p>菜单栏菜单通常包括以下菜单：苹果菜单、应用菜单、文件菜单、编辑菜单、格式菜单、查看菜单、特定于应用程序菜单、窗口菜单、帮助菜单。例如“Typora”的特定应用程序菜单是主题菜单。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Windows and Views 窗口和视图]]></title>
        <id>https://POssichen.github.io/post/mac-os-windows-and-views-chuang-kou-he-shi-tu/</id>
        <link href="https://POssichen.github.io/post/mac-os-windows-and-views-chuang-kou-he-shi-tu/">
        </link>
        <updated>2020-02-01T06:08:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="windows-anatomy-窗口解剖">Windows Anatomy 窗口解剖</h3>
<p>窗口由框架区域和主体区域组成，使用户可以查看应用程序中的内容并与之交互。一个窗口可以和其他窗口并排出现在屏幕上或者填满整个屏幕。</p>
<ol>
<li>窗口类型有文件窗口、应用程序窗口、面板窗口、对话窗口、警报窗口这五种。弹出窗口由于使一个过渡视图，所以不会被视为窗口。</li>
<li>窗口框架可以包括标题栏、工具栏、选项卡栏和底部栏。</li>
<li>标题栏即是顶栏，位于窗口顶部，并包含关闭、最小化和缩放选项。其中警报的标题栏是空的。文档窗口的标题栏可能还会显示一个图标，并让用户单击标题栏来改变文件名、标签和位置。</li>
<li>文档窗口的标题一般显示为文档名称或者“无标题”。</li>
<li>不要在标题栏中显示文件或文件夹路径。</li>
<li>使用数字后缀来区分重复的标题。</li>
<li>如果隐藏标题栏，请确保用户仍然可以与应用的窗口进行交互。</li>
<li>工具列一般位于标题栏下方或与标题栏集成，可以快速访问各种命令和控件。可以允许用户对工具列上的内容进行自定义。</li>
<li>标签栏允许用户在单个窗口中对多个正文内容视图之间进行切换。例如Safari的标签页，还可以拖动标签页从而形成一个独立的窗口。</li>
<li>在极少数情况下，窗口在主体区域下方的底栏包含用于改变内容的控件。</li>
<li>范围栏使用户可以缩小搜索范围或根据特定属性过滤内容。</li>
<li>窗口状态有3层，分别是第一层Key window（关键窗口）指浮动在主窗口上方的面板有时候也是关键窗口，第二层Main window（主窗口状态）是指引起用户关注的最重要的窗口。第三层Inactive window state（无效窗口状态）指不在前台的窗口或者不活动的窗口。</li>
<li>在关键窗口中的关闭、最小化、缩放的标题栏是彩色，而在其他窗口为灰色，这些差异使用户更易于快速识别主窗口和关键窗口。</li>
<li>用户可以通过点击窗口来激活窗口变成关键窗口。</li>
</ol>
<h3 id="alerts-警报">Alerts 警报</h3>
<p>当系统或程序需要警告用户有错误情况或潜在危险情况时，将出现警报。</p>
<ol>
<li>最小化警报，警报会破坏用户体验，只应该在重要情况下使用。</li>
<li>确保警报提供关键信息和有用选择。</li>
<li>使用系统标准样式。</li>
<li>提供一条简洁、清楚地描述情况的消息。</li>
<li>允许使用ESC和Command-priod键来取消掉警报。</li>
<li>将按钮放在人们期望的位置。默认按钮始终在右侧。取消按钮通常在左侧。</li>
</ol>
<h3 id="boxes-框盒">Boxes 框盒</h3>
<ol>
<li>避免框盒互相嵌套。</li>
<li>在标题框的句子中使用大写字母。</li>
<li>不用以冒号结束框标题。</li>
</ol>
<h3 id="column-views-列视图">Column Views 列视图</h3>
<p>列视图使用户可以使用一系列垂直列查看盒浏览数据层次结构。每一列代表层次结构的一个级别。在列中，任何包含嵌套子项的父项都使用三角形图标标记。</p>
<ol>
<li>当数据层次结构很深时，用户倾向于频繁切换时需要考虑使用列视图。</li>
<li>在第一列中显示数据层次结构的根级别。</li>
<li>当没有要显示的嵌套项目时，则在右边显示所选项目的详细信息。</li>
<li>允许用户自定义调整列的宽度以满足实际显示情况。</li>
</ol>
<h3 id="dialogs-对话方块">Dialogs 对话方块</h3>
<p>对话框时一种可以引起用户响应的窗口。对话框有三种方式：文档模式、应用程序模式、无模式。</p>
<ol>
<li>尽可能提供控件盒字段的默认值。</li>
<li>将初始的焦点设置为接受用户输入的第一个位置。</li>
<li>使静态文本可选可复制。</li>
<li>在数据输入期间检查错误。而不是全部输入完点击确定再检测。</li>
<li>尽可能提供选择而不是要求用户输入数据。</li>
<li>调整对话框大小时，需要确保正确缩放界面元素。</li>
<li>按用户预期来摆放按钮。从左到右依次是Help button、Dialog button、Cancel button、Action button。</li>
<li>将破坏性按钮盒非破坏性按钮分开。如“不保存”和“保存”。</li>
<li>确保取消按钮撤销所有已应用的更改。</li>
</ol>
<h3 id="image-views-图像浏览">Image Views 图像浏览</h3>
<p>图像视图默认是不可编辑且不可交互的。</p>
<ol>
<li>编辑功能开发者可以自行开启。</li>
<li>使用按钮而不是图像视图来制作可单击的图像。</li>
<li>确保动画序列中的所有图像尺寸均一致。</li>
</ol>
<h3 id="outline-views-大纲视图">Outline Views 大纲视图</h3>
<ol>
<li>使用表格视图来呈现非分层数据，而不是使用大纲视图。</li>
<li>仅在第一列中公开数据层次结构。</li>
<li>使用描述性列标题。</li>
<li>用户可以点击列标题来对大纲视图进行排序。</li>
<li>允许用户调整列的宽度大小。</li>
<li>保留用户的层级选择，用户切换时保留用户离开时的展示。</li>
<li>考虑在多列轮廓视图使用交替的行颜色。</li>
<li>必要时允许用户单击单元格来编辑其内容。</li>
<li>使用居中的省略号来截断原本会被剪切的单元格文本。</li>
<li>提高搜索字段来帮助人们快速找到价值。</li>
</ol>
<h3 id="panels-面板">Panels 面板</h3>
<p>面板是一个辅助窗口，其中包含与活动文档或选择有关的控件、选项和信息。</p>
<ol>
<li>使用面板可以快速访问重要的控件与内容相关的信息。</li>
<li>考虑弹出框、侧边栏、拆分视图和工具栏来提供辅助信息和工具。</li>
<li>根据面板用途来命名面板。</li>
<li>根据活跃状态来适当显示和隐藏面板。</li>
<li>不要将面板列为文档。</li>
<li>确保所有面板都包含标题栏。</li>
<li>一般情况下面板不需要最小化，所以应该禁用“最小化”按钮。</li>
<li>在界面和用户文档中按标题引用面板。</li>
<li>确认检查器面板中显示的信息始终与当前的内容匹配。</li>
<li>HUD样式的面板与普通面板区别为更暗且半透明。使用情况一般有专注于电影、沉浸于应用程序中、标准面板遮盖了基本内容时、快速调整时。</li>
<li>结合使用HUD面板，根据场景来决定使用何种面板。</li>
<li>在HUD中使用简单的调整控件。</li>
<li>尽可能减小HUD面板的体积。</li>
<li>在HUD中不需要太多颜色，以免分散用户注意力。</li>
</ol>
<h3 id="popovers-弹出窗口">Popovers 弹出窗口</h3>
<p>弹出窗口是单击控件或视图时显示在屏幕上其他内容上方的视图。</p>
<ol>
<li>使用弹出窗口显示少量信息或者功能。</li>
<li>考虑使用弹出窗口而不是侧边栏和面板之类的临时视图。</li>
<li>根据实际情况决定弹出框的关闭时间。</li>
<li>关闭按钮只有在明确是否自动保存时才值得添加。</li>
<li>弹出框不应该覆盖点击的元素。</li>
<li>考虑让用户分离弹出窗口为面板。</li>
<li>一次仅显示一个弹出窗口。</li>
<li>不要在弹出框上显示其他视图。</li>
<li>避免弹出窗口太大。</li>
<li>保留标准的弹出窗口外观。</li>
<li>更改弹出窗口的大小时，要提供平滑的过渡。</li>
<li>不要将弹出窗口用作警报。</li>
</ol>
<h3 id="scroll-views-滚动视图">Scroll Views 滚动视图</h3>
<p>滚动视图使人们可以通过水平或者垂直滚动来浏览大于视图可见区域的内容。</p>
<ol>
<li>滚动方式有三种：连续滚动、逐行滚动、逐页滚动。</li>
<li>让用户决定滚动条是否可见，避免控件于滚动条放在同一行。</li>
<li>不要覆盖默认滚动手势或键盘快捷键。要使用用户熟悉的滚动行为。</li>
<li>不要将滚动视图放在另一个滚动视图内。</li>
<li>执行逐页滚动时，滚动适当的数量。</li>
<li>单击滚动条轨道时，滚动适当的数量。</li>
<li>适当时执行自动滚动。如使用Command+F时查看文本时......</li>
<li>不要使用滚动条作为滑块。</li>
<li>有必要时，考虑在面板中使用小型或小型滚动条。</li>
</ol>
<h3 id="sheets-工作表">Sheets 工作表</h3>
<p>工作表时附加到特定窗口的对话框。</p>
<ol>
<li>在其他窗口上方打开工作表。一般位于最上方。</li>
<li>避免一次在窗口时显示多个工作表。</li>
<li>在多个窗口打开同一个文档时，需要使用应用程序模式对话框而不是工作表。</li>
<li>用户需要查看窗口或与窗口进行交互以解决对话框时，请使用面板而不是工作表。</li>
</ol>
<h3 id="sidebars-侧边栏">Sidebars 侧边栏</h3>
<p>侧边栏通常由一个表格视图或一个大纲视图组成，使人们可以浏览并选择要进行的操作。</p>
<ol>
<li>一般不要在侧边栏中显示两个以上的层次结构。</li>
<li>在侧边栏上使用正确的背景外观。不透明或者透明。</li>
<li>考虑在调整父窗口的大小时自动隐藏和显示侧边栏。</li>
<li>尽可能让用户自定义侧边栏的内容。</li>
<li>在可编辑的侧边栏中需要考虑提供用于添加、删除、操作或获取有关项目信息的按钮。</li>
</ol>
<h3 id="split-views-分割视图">Split Views 分割视图</h3>
<ol>
<li>合理时允许隐藏窗口。</li>
<li>提供多种访问窗格的方法。</li>
<li>设置适当的最小和最大窗格大小。</li>
<li>用户一般喜欢薄分割线的样式。</li>
</ol>
<h3 id="tab-views-标签视图">Tab Views 标签视图</h3>
<p>标签视图在同一区域中显示多个相互排斥的内容窗格。</p>
<ol>
<li>可以将选项卡控件放置在内容区域的任何一侧（上、下、左、右）</li>
<li>使用与内容密切相关的选项卡视图样式。</li>
<li>选项卡视图中提供两到六个选项卡。</li>
<li>确保窗格中的控件仅影响同一窗格中的内容。</li>
<li>为每个选项卡提供一个标签，以描述其窗格的内容。</li>
<li>避免将弹出按钮用作选项卡切换器。</li>
</ol>
<h3 id="table-views-表格视图">Table Views 表格视图</h3>
<p>表格视图在组织为列和行的单元格滚动列表中干净有效地呈现了少量或大量数据。</p>
<ol>
<li>允许用户点击列标题进行排序。</li>
<li>允许用户调整列的大小。</li>
<li>在多列表格中使用交替的行颜色。</li>
<li>可以允许用户对单元格数据进行编辑。</li>
<li>使用大纲视图而不是表视图来呈现层次数据结构。</li>
<li>使用居中的省略号来显示无法全部显示的文本。</li>
<li>提供搜索字段。</li>
</ol>
<h3 id="toolbars-工具栏">Toolbars 工具栏</h3>
<p>工具栏提供了对常用命令和功能的便捷访问，它位于窗口顶部的框架中，位于标题栏的下方或与标题栏集成在一起。</p>
<ol>
<li>仅使用工具栏特定的系统控件样式。</li>
<li>使每个工具栏都可作为菜单命令使用。</li>
<li>为每个工具栏提供简短的描述性标签。</li>
<li>确保每个工具栏项的含义都清楚。</li>
<li>在工具栏中，图标优先于文本。</li>
<li>当内容在工具栏下方流动时，需要使用半透明外观。</li>
<li>准确反映在两个状态之间切换控件的当前状态。</li>
<li>将工具栏项目按照逻辑进行分组。</li>
<li>允许用户显示或隐藏工具栏。</li>
<li>考虑在全屏模式时隐藏工具栏来增加用户对内容的关注。</li>
<li>允许用户自定义工具栏内容。</li>
<li>提供有用的默认工具栏项。</li>
</ol>
<h3 id="web-views-网页视图">Web Views 网页视图</h3>
<p>Web视图直接在应用程序中加载并显示丰富的Web内容。</p>
<ol>
<li>适当时启用前进和后退按钮。</li>
<li>避免使用Web视图来构建Web浏览器。不鼓励复制成浏览器。</li>
</ol>
<h3 id="drawers-抽屉">Drawers 抽屉</h3>
<p>抽屉是一种界面元素，其中包含与特定窗口有关的选项或信息。</p>
<h3 id="placards-标语牌">Placards 标语牌</h3>
<p>标语牌是出现在窗口底部边缘的一种视图。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电脑与个人生产力 — 需求剖析]]></title>
        <id>https://POssichen.github.io/post/dian-nao-yu-ge-ren-sheng-chan-li-xu-qiu-pou-xi/</id>
        <link href="https://POssichen.github.io/post/dian-nao-yu-ge-ren-sheng-chan-li-xu-qiu-pou-xi/">
        </link>
        <updated>2020-01-31T16:06:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="起因">起因</h3>
<p>​我个人是对屏幕的细腻度有着超高要求的用户，尤其是在经过两个月的 4K 显示器惯坏的情况下，使用起自己手里的这台刷了黑苹果的小米笔记本会有各种说不出的难受，但是这种难受并不是完完全全的生理上的难受，而是经过心理上的放大后的难受，说白了就是心理障碍。由于屏幕是基础的1080P屏幕，在长时间的网页观看时会出现花纹情况，哪怕是在13寸的屏幕上，PPI也不过是165.63，相比起来手机的326、MacBook系列的226，差的不多，但是也有明显的差距，在不开hidpi的情况下完全没法看（这是个人感觉），实际上开了之后还是有很大的改进，勉勉强强可以看，但是心理上非常不舒服，一直催眠自己觉得屏幕还是没法看，觉得需要去换个高PPI的屏幕，外接一个4K屏幕，还有就是重新购入一台Mac，来满足自己眼睛的要求，表面上我的需求是需要一个更高PPI、更高分辨率的屏幕，这样子我才能更好地完成我的毕业论文，写出更好的Blog文章，才能显得更有生产力，显而易见这些都是我在觉得自己屏幕不好的基础上臆想出来的，虽然屏幕真的不太好，但是这并不应该影响能干的事情。而实际上，我是因为长时间的观看白色背景的网页，由于屏幕的白色不够纯和太亮而导致的疲劳，所以我觉得我的实际核心需求是长时间观看网页、文字不疲劳。</p>
<h3 id="过程">过程</h3>
<p>​这个想法的过程并不是很快地出现又很快的消失，它整整困扰了我一个星期，我甚至都想到了好几种解决的方案：</p>
<ol>
<li>第一种方案是购入一个15.6寸的4K便携显示器，这有着超高的PPI显示效果，同时有着相对便携的属性，令我一度倾心，但是沉下心来思考一番就会发现这个屏幕的便携是一个伪需求，显示器的重量重达1kg，而我的笔记本重量也不过1.25kg，两者相加起来比今年的Macbook Pro 16'' 还要中出个0.25kg，去实体店里体验过16寸笔电的我已经打消了带着这么重的配件通勤，所以就意味着它只会呆在一个位置，移动的频率其实是非常低的（对于我而言，我对比了多个可能会移动的路径），同时它和下面要讲到的大屏显示器在价格上没有任何优势，在显示范围上更是没有优势，唯二的优势是在搬家时更容易移动以及更高的PPI显示。</li>
<li>第二种方案是购入一个24/27寸的4K显示器，在尺寸和分辨率上有着不错的显示效果，由于使用过2个月的27寸屏幕，给我的感觉就是看不完整个屏幕，同样由于尺寸的提高，PPI只有可怜的163.18，所以就会出现远看看不起，近看看不完的尴尬场面，同时在搬家、迁居的这种搬运场景之下简直是灾难，体验过第一次的我绝对不想体验第二次。并且由于屏幕的过大，在娱乐方面有明显的加持效果，而在工作生产力上（特指目前个人的绘图、写作情况）给我的感觉并没有手里的13寸屏幕来的顺手，就是太大了，并且在隐私上的作用几乎为零，你在干嘛别人一掉头就能发现，对于我这种非常重视隐私的人来说是个大问题。而24寸的屏幕大小并不能说是恰到好处，但是也绝对不是27寸那么尴尬，根据手里的24寸1080P的显示器对比而言，使用起来还是相对舒服的，但是它同样面临着一个携带转移的问题。</li>
<li>第三种方案是直接购入一个带有Retina屏幕的MacBook产品，这个方案既可以解决黑苹果带来的体验上的不便（蓝牙、网卡、触控板偶尔失灵、多设备联动等问题），也能让我感受到高品质的屏幕效果体验，看起来是非常完美的一个解决方案，但是也有一些并不能让我服服帖帖掏钱的地方，第一个就是售价问题，当然这是我的问题，而不是它的问题，第二个是屏幕设计上，在我看完新的iPad pro之后，看MacBook Air老是会觉得边框有点宽，相比最新的xps系列电脑可以说是被吊到墙上鞭打了，不过辩证而言，我在使用同款的边框大小的小米笔记本时，我的注意力并没有注意到边框的大小，注意力的95%都是集中在屏幕上，就意味着这个因素的影响并不大，只是我的心里对美的要求导致我觉得它不够完美。</li>
</ol>
<h3 id="结果">结果</h3>
<p>​最令我兴奋的事情是我成功地透过了表面的需求找到了核心的需求，我并不是需要更高的PPI显示，而是需要长时间舒适的观看体验，就算是换上了4K显示器，盯着好几个小时的白纸黑字界面肯定也是同样的疲劳，所以我需要的是找到将白色背景换成黑色的方法，调低字体和背景的对比度，这样就能获得相对不错的观看体验。与此同时，因为屏幕观感不好而觉得需要更新设备来完成任务的疑惑也豁然开朗，新设备、新工具只是一个借口，这个借口既是购买新设备的，也是拖延本可以在现有设备上完成任务的，我不会因为购买了一台新的MacBook就会把Blog写的更好，将Apple的人机交互逻辑练习的更好，也不会因为购买了一块新的便携屏幕就能把毕业论文写的更好，把想学习的东西学的更好。唯一能让它们变得更好的方法就是在现在有的设备中马上开始动手，开始练习，不再拖沓和找借口。就像影视飓风的Tim说的“工具它永远是一个工具，关键是你怎么去用它”，同样还有另外一句，“生产力工具本身并不具有生产力，关键是看使用的人是否带有生产力”。现在给我一台全新的顶配Mac pro，在我手里也发挥不出应该有的价值；而在一些人的手里，哪怕是最基础的电脑加剪辑软件，都可以完成出一份优秀的作品。</p>
<p>​当然，电脑换还是要换的，但是需要做的东西不应该等到换到了电脑再来做，而是应该在完成事情的同时为了更好的使用体验，可以加快效率时再更新设备，不可本末倒置。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Icons and Images 图标和图像]]></title>
        <id>https://POssichen.github.io/post/mac-os-icons-and-images-tu-biao-he-tu-xiang/</id>
        <link href="https://POssichen.github.io/post/mac-os-icons-and-images-tu-biao-he-tu-xiang/">
        </link>
        <updated>2020-01-31T11:01:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="image-size-and-resolution-图像尺寸和分辨率">Image Size and Resolution 图像尺寸和分辨率</h3>
<p>标准分辨率的显示器具有1:1像素密度（即@1x），高分辨率显示器为（@2x）</p>
<ol>
<li>以最大尺寸制作图片，然后按比例缩小尺寸。</li>
<li>使用8 x 8的网格。</li>
<li>以较低的分辨率预览高分辨率图像。</li>
</ol>
<h3 id="app-icon-应用程序图标">App Icon 应用程序图标</h3>
<ol>
<li>应用图标拟物化。</li>
<li>设计一个容易识别关联日常事物的图标。</li>
<li>应用图标尽可能简单。</li>
<li>设计带有中心点的图标，可以清楚标识应用。</li>
<li>iOS和Mac os版本的应用图标应该有所区别。</li>
<li>避免使用实际文本。</li>
<li>避免图标包含照片、屏幕截图或者界面元素。</li>
<li>不要使用Apple已有产品的图标。</li>
<li>图标需要具有适当的角度和逼真的阴影。</li>
<li>图标可以旋转9度以呈现。</li>
<li>在图标阴影中只使用黑色。</li>
<li>准确描绘真实物体。</li>
<li>考虑中图标的边缘添加一点光晕。</li>
<li>需要使用PNG格式，不可使用JPEG和ICNS格式。</li>
<li>应用图标的尺寸应该有5个尺寸。以@2x为例：32px、64px、256px、512px、1024px</li>
<li>以较小的尺寸简化图标。以确保它们保持清晰。</li>
<li>保持高分辨率和标准分辨率的图稿一致。在不同显示器之间拖动图标时，外观不该突然改变。</li>
</ol>
<h3 id="custom-icons-自定义图标">Custom Icons 自定义图标</h3>
<p>应用内的图标如果需要和系统图标不一样，那可以自定义图标。</p>
<ol>
<li>简单可识别。</li>
<li>程序中各个部分需保持图标一致。</li>
<li>避免图标中包含文本。</li>
<li>提供图标替代文本标签，方便障碍者更容易识别。</li>
<li>尽可能将图标创建为模版图像。以便于根据用户交互进行改变外观。</li>
<li>以PDF格式输出自定义图标。只有需要阴影、纹理、高光等复杂设计才建议使用PNG格式。</li>
<li>提供适当大小的图标。PDF只需要@1x，PNG需要@1x和@2x大小。</li>
<li>分段控件图标需要三个尺寸。@1x为例Regular-17px、Small-14x13px、Mini-12x12px。</li>
<li>设计具有透明性和适当详细的侧边栏图标。@2x为例图标大小有32px、36px、64px3个尺寸。</li>
<li>工具栏中不能同时使用控件图标和独立图标。</li>
<li>大多数工具栏中首选控件图标。</li>
<li>尽可能使用系统提供的控件图标。</li>
<li>设计具有透明度和适当详细程度的控制图标，@2x的尺寸为38px。</li>
<li>独立的工具栏图标的@2x尺寸为64px。</li>
</ol>
<h3 id="multi-item-drag-images-拖动多项目图像">Multi-Item Drag Images 拖动多项目图像</h3>
<ol>
<li>设计内容丰富的图像。</li>
</ol>
<h3 id="system-icons-系统图标">System Icons 系统图标</h3>
<ol>
<li>尽可能使用内置图标。</li>
<li>使用图标替代文本标签。</li>
<li>如果找不到满足需求的系统图标，可以自行设计一套图标。</li>
<li>仅在带边框的控件中使用控件图标。</li>
<li>一般可以直接调用API使用图标。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Visual Design 视觉设计]]></title>
        <id>https://POssichen.github.io/post/mac-os-visual-design-shi-jue-she-ji/</id>
        <link href="https://POssichen.github.io/post/mac-os-visual-design-shi-jue-she-ji/">
        </link>
        <updated>2020-01-30T06:04:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="animation-动画">Animation 动画</h3>
<ol>
<li>追求显示主义。现实的运动可以帮助人们了解事物的运作方式。</li>
<li>避免将动画用于频繁发生的交互。重复出现的动画会导致用户认为动画降低了效率。</li>
<li>增强反馈和理解。例如最小化窗口时不是突然消失，而是从屏幕流畅地移动到Dock，以便用户知道它的去向。</li>
<li>中对象之间平滑过度。</li>
<li>暗示结果。例如将一个项目拖到Dock栏，其他项目会移动到一边，显示即将放置的位置。</li>
<li>确保全屏模式过渡动画流畅。</li>
<li>明智地使用动画和动作效果。</li>
<li>将动画设置为可选。</li>
</ol>
<h3 id="color-颜色">Color 颜色</h3>
<ol>
<li>明智地使用颜色进行交流。</li>
<li>在不同国家使用适当含义的颜色。</li>
<li>避免使用存在歧义的颜色。</li>
<li>考虑半透明颜色的使用场景。</li>
<li>在各种光照条件下测试应用的配色方案。</li>
<li>允许用户使用标准的颜色面板来更改颜色。</li>
<li>不要在应用程序中对系统颜色进行硬编码。</li>
<li>不要重新定义系统颜色的定义。</li>
</ol>
<h3 id="dark-mode-黑暗模式">Dark Mode 黑暗模式</h3>
<ol>
<li>确保所有外观都具有足够的色彩对比度。</li>
<li>柔化白色背景的颜色。</li>
<li>尽可能使用模版影像。</li>
<li>使用系统提供的标签颜色来显示文本。</li>
<li>使用系统视图绘制静态文本。</li>
</ol>
<h3 id="translucency-半透明">Translucency 半透明</h3>
<ol>
<li>首选系统提供的元素和颜色。</li>
<li>使用系统模版图像。</li>
</ol>
<h3 id="typography-版式">Typography 版式</h3>
<ol>
<li>使用字体粗细、大小和颜色突出显示应用程序中最重要的内容。</li>
<li>确保自定义字体清晰易读。</li>
<li>使用正确的字体变体。</li>
<li>使用标准的字体面板更改用户字体。</li>
<li>使用动态系统字体变体来匹配标准控件的文本外观。</li>
</ol>
]]></content>
    </entry>
</feed>