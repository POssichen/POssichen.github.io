<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://POssichen.github.io</id>
    <title>陈冠朋 の Blog</title>
    <updated>2019-11-20T14:49:45.176Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://POssichen.github.io"/>
    <link rel="self" href="https://POssichen.github.io/atom.xml"/>
    <logo>https://POssichen.github.io/images/avatar.png</logo>
    <icon>https://POssichen.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 陈冠朋 の Blog</rights>
    <entry>
        <title type="html"><![CDATA[毕业设计疑问汇总]]></title>
        <id>https://POssichen.github.io/post/bi-ye-she-ji-yi-wen-hui-zong</id>
        <link href="https://POssichen.github.io/post/bi-ye-she-ji-yi-wen-hui-zong">
        </link>
        <updated>2019-11-19T12:40:39.000Z</updated>
        <content type="html"><![CDATA[<h4 id="20191119">2019.11.19</h4>
<p>Q：为什么 Preprocess.py 处理的数据一定要3列？而且前两列必须为数字？<br>
A：</p>
<h4 id="2011120">201.11.20</h4>
<p>Q：logistic.py 处理数据的速度为什么比 Naivebayes.py 的慢2-3倍<br>
A：</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[毕业设计操作手册]]></title>
        <id>https://POssichen.github.io/post/bi-ye-she-ji-cao-zuo-shou-ce</id>
        <link href="https://POssichen.github.io/post/bi-ye-she-ji-cao-zuo-shou-ce">
        </link>
        <updated>2019-11-19T11:41:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="运行preprocesspy和statspy">运行Preprocess.py和stats.py</h3>
<p>由于数据的庞大，选择sys命令行的形式进行运行程序；<br>
运行方式：</p>
<ol>
<li>在终端中 cd 进入到文件所在的文件夹；</li>
<li>进入虚拟的 python3 环境中，运行的命令行为 <code>source ./env/bin/activate</code>；</li>
<li>如果新设备还没有创建虚拟环境，可以运行命令行 <code>python3 -m venv env</code> 来创建虚拟环境；</li>
<li>可以使用 <code>python3 -m pip install XXX</code> 来安装所缺少的工具包；</li>
<li>遇到下载速度过慢就上网搜索国内的镜像库；</li>
</ol>
<h3 id="需要安装的包有以下">需要安装的包有以下：</h3>
<ol>
<li><code>python3 -m pip install pip</code></li>
<li><code>python3 -m pip install utils</code></li>
<li><code>python3 -m pip install random</code></li>
<li><code>python3 -m pip install numpy</code></li>
<li><code>python3 -m pip install pandas</code></li>
<li><code>python3 -m pip install sklearn</code></li>
<li><code>python3 -m pip install keras</code></li>
<li><code>python3 -m pip install tensorflow</code></li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[图表我应该怎么选？]]></title>
        <id>https://POssichen.github.io/post/tu-biao-wo-ying-gai-zen-me-xuan</id>
        <link href="https://POssichen.github.io/post/tu-biao-wo-ying-gai-zen-me-xuan">
        </link>
        <updated>2019-11-13T13:43:50.000Z</updated>
        <summary type="html"><![CDATA[<p>在绘制原型图的时候，遇到呈现数据的图表，是使用最简单明了的柱状图和折线图，还是使用复杂但是可以呈现多维信息的图呢？</p>
]]></summary>
        <content type="html"><![CDATA[<p>在绘制原型图的时候，遇到呈现数据的图表，是使用最简单明了的柱状图和折线图，还是使用复杂但是可以呈现多维信息的图呢？</p>
<!-- more -->
<h3 id="起源">起源</h3>
<p>这是我第一次实习遇到的第一个问题，这是一个可以展示多个维度信息的图表，横坐标是时间，纵坐标是热力数值。可以得知事件的发生时间和达到的热力数值，同时也可以得知同一时间达到同一个热力数值范围的事件数量。相当于结合了两个柱状图的信息。但是在和项目组评审的时候被提出这个图表过于复杂，用户是不是没那么容易理解，与此同时，项目组是承认只要仔细看就是可以理解的，匆忙扫一眼是觉得疑惑的，这只是一个例子，引出的是应该首先为用户提供的是尽量简单的操作还是尽量多维的信息展示？</p>
<h3 id="成本">成本</h3>
<p>站在用户的角度去考虑这个问题，我花钱购买的这个系统，我需要的是无门槛或者尽量少门槛的操作，这样我就可以在培训员工使用这套系统的时候节约成本，因为系统简单，那么对应的出现错误的几率也会随之降低，付出的错误成本也会减少。但是一个系统太过简单的话，那么用户就会感觉这钱花的有点不值，让用户感觉自己可以花一半的价钱也可以达到这样的效果。就有可能对下次的合作产生一定的影响。所以我个人的粗浅理解是在不增加用户的操作和理解成本的情况下，尽量将一份图表包装成高价值的形式。这样不仅体现了产品经理对产品的包装能力，还体现了控制用户的理解成本和操作成本的能力。</p>
]]></content>
    </entry>
</feed>