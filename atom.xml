<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://POssichen.github.io</id>
    <title>陈冠朋 の Blog</title>
    <updated>2020-02-09T06:57:03.417Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://POssichen.github.io"/>
    <link rel="self" href="https://POssichen.github.io/atom.xml"/>
    <logo>https://POssichen.github.io/images/avatar.png</logo>
    <icon>https://POssichen.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 陈冠朋 の Blog</rights>
    <entry>
        <title type="html"><![CDATA[Mac os Windows and Views 窗口和视图]]></title>
        <id>https://POssichen.github.io/post/mac-os-windows-and-views-chuang-kou-he-shi-tu</id>
        <link href="https://POssichen.github.io/post/mac-os-windows-and-views-chuang-kou-he-shi-tu">
        </link>
        <updated>2020-02-09T06:08:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="windows-anatomy-窗口解剖">Windows Anatomy 窗口解剖</h3>
<p>窗口由框架区域和主体区域组成，使用户可以查看应用程序中的内容并与之交互。一个窗口可以和其他窗口并排出现在屏幕上或者填满整个屏幕。</p>
<ol>
<li>窗口类型有文件窗口、应用程序窗口、面板窗口、对话窗口、警报窗口这五种。弹出窗口由于使一个过渡视图，所以不会被视为窗口。</li>
<li>窗口框架可以包括标题栏、工具栏、选项卡栏和底部栏。</li>
<li>标题栏即是顶栏，位于窗口顶部，并包含关闭、最小化和缩放选项。其中警报的标题栏是空的。文档窗口的标题栏可能还会显示一个图标，并让用户单击标题栏来改变文件名、标签和位置。</li>
<li>文档窗口的标题一般显示为文档名称或者“无标题”。</li>
<li>不要在标题栏中显示文件或文件夹路径。</li>
<li>使用数字后缀来区分重复的标题。</li>
<li>如果隐藏标题栏，请确保用户仍然可以与应用的窗口进行交互。</li>
<li>工具列一般位于标题栏下方或与标题栏集成，可以快速访问各种命令和控件。可以允许用户对工具列上的内容进行自定义。</li>
<li>标签栏允许用户在单个窗口中对多个正文内容视图之间进行切换。例如Safari的标签页，还可以拖动标签页从而形成一个独立的窗口。</li>
<li>在极少数情况下，窗口在主体区域下方的底栏包含用于改变内容的控件。</li>
<li>范围栏使用户可以缩小搜索范围或根据特定属性过滤内容。</li>
<li>窗口状态有3层，分别是第一层Key window（关键窗口）指浮动在主窗口上方的面板有时候也是关键窗口，第二层Main window（主窗口状态）是指引起用户关注的最重要的窗口。第三层Inactive window state（无效窗口状态）指不在前台的窗口或者不活动的窗口。</li>
<li>在关键窗口中的关闭、最小化、缩放的标题栏是彩色，而在其他窗口为灰色，这些差异使用户更易于快速识别主窗口和关键窗口。</li>
<li>用户可以通过点击窗口来激活窗口变成关键窗口。</li>
</ol>
<h3 id="alerts-警报">Alerts 警报</h3>
<p>当系统或程序需要警告用户有错误情况或潜在危险情况时，将出现警报。</p>
<ol>
<li>最小化警报，警报会破坏用户体验，只应该在重要情况下使用。</li>
<li>确保警报提供关键信息和有用选择。</li>
<li>使用系统标准样式。</li>
<li>提供一条简洁、清楚地描述情况的消息。</li>
<li>允许使用ESC和Command-priod键来取消掉警报。</li>
<li>将按钮放在人们期望的位置。默认按钮始终在右侧。取消按钮通常在左侧。</li>
</ol>
<h3 id="boxes-框盒">Boxes 框盒</h3>
<ol>
<li>避免框盒互相嵌套。</li>
<li>在标题框的句子中使用大写字母。</li>
<li>不用以冒号结束框标题。</li>
</ol>
<h3 id="column-views-列视图">Column Views 列视图</h3>
<p>列视图使用户可以使用一系列垂直列查看盒浏览数据层次结构。每一列代表层次结构的一个级别。在列中，任何包含嵌套子项的父项都使用三角形图标标记。</p>
<ol>
<li>当数据层次结构很深时，用户倾向于频繁切换时需要考虑使用列视图。</li>
<li>在第一列中显示数据层次结构的根级别。</li>
<li>当没有要显示的嵌套项目时，则在右边显示所选项目的详细信息。</li>
<li>允许用户自定义调整列的宽度以满足实际显示情况。</li>
</ol>
<h3 id="dialogs-对话方块">Dialogs 对话方块</h3>
<p>对话框时一种可以引起用户响应的窗口。对话框有三种方式：文档模式、应用程序模式、无模式。</p>
<ol>
<li>尽可能提供控件盒字段的默认值。</li>
<li>将初始的焦点设置为接受用户输入的第一个位置。</li>
<li>使静态文本可选可复制。</li>
<li>在数据输入期间检查错误。而不是全部输入完点击确定再检测。</li>
<li>尽可能提供选择而不是要求用户输入数据。</li>
<li>调整对话框大小时，需要确保正确缩放界面元素。</li>
<li>按用户预期来摆放按钮。从左到右依次是Help button、Dialog button、Cancel button、Action button。</li>
<li>将破坏性按钮盒非破坏性按钮分开。如“不保存”和“保存”。</li>
<li>确保取消按钮撤销所有已应用的更改。</li>
</ol>
<h3 id="image-views-图像浏览">Image Views 图像浏览</h3>
<p>图像视图默认是不可编辑且不可交互的。</p>
<ol>
<li>编辑功能开发者可以自行开启。</li>
<li>使用按钮而不是图像视图来制作可单击的图像。</li>
<li>确保动画序列中的所有图像尺寸均一致。</li>
</ol>
<h3 id="outline-views-大纲视图">Outline Views 大纲视图</h3>
<ol>
<li>使用表格视图来呈现非分层数据，而不是使用大纲视图。</li>
<li>仅在第一列中公开数据层次结构。</li>
<li>使用描述性列标题。</li>
<li>用户可以点击列标题来对大纲视图进行排序。</li>
<li>允许用户调整列的宽度大小。</li>
<li>保留用户的层级选择，用户切换时保留用户离开时的展示。</li>
<li>考虑在多列轮廓视图使用交替的行颜色。</li>
<li>必要时允许用户单击单元格来编辑其内容。</li>
<li>使用居中的省略号来截断原本会被剪切的单元格文本。</li>
<li>提高搜索字段来帮助人们快速找到价值。</li>
</ol>
<h3 id="panels-面板">Panels 面板</h3>
<p>面板是一个辅助窗口，其中包含与活动文档或选择有关的控件、选项和信息。</p>
<ol>
<li>使用面板可以快速访问重要的控件与内容相关的信息。</li>
<li>考虑弹出框、侧边栏、拆分视图和工具栏来提供辅助信息和工具。</li>
<li>根据面板用途来命名面板。</li>
<li>根据活跃状态来适当显示和隐藏面板。</li>
<li>不要将面板列为文档。</li>
<li>确保所有面板都包含标题栏。</li>
<li>一般情况下面板不需要最小化，所以应该禁用“最小化”按钮。</li>
<li>在界面和用户文档中按标题引用面板。</li>
<li>确认检查器面板中显示的信息始终与当前的内容匹配。</li>
<li>HUD样式的面板与普通面板区别为更暗且半透明。使用情况一般有专注于电影、沉浸于应用程序中、标准面板遮盖了基本内容时、快速调整时。</li>
<li>结合使用HUD面板，根据场景来决定使用何种面板。</li>
<li>在HUD中使用简单的调整控件。</li>
<li>尽可能减小HUD面板的体积。</li>
<li>在HUD中不需要太多颜色，以免分散用户注意力。</li>
</ol>
<h3 id="popovers-弹出窗口">Popovers 弹出窗口</h3>
<p>弹出窗口是单击控件或视图时显示在屏幕上其他内容上方的视图。</p>
<ol>
<li>使用弹出窗口显示少量信息或者功能。</li>
<li>考虑使用弹出窗口而不是侧边栏和面板之类的临时视图。</li>
<li>根据实际情况决定弹出框的关闭时间。</li>
<li>关闭按钮只有在明确是否自动保存时才值得添加。</li>
<li>弹出框不应该覆盖点击的元素。</li>
<li>考虑让用户分离弹出窗口为面板。</li>
<li>一次仅显示一个弹出窗口。</li>
<li>不要在弹出框上显示其他视图。</li>
<li>避免弹出窗口太大。</li>
<li>保留标准的弹出窗口外观。</li>
<li>更改弹出窗口的大小时，要提供平滑的过渡。</li>
<li>不要将弹出窗口用作警报。</li>
</ol>
<h3 id="scroll-views-滚动视图">Scroll Views 滚动视图</h3>
<p>滚动视图使人们可以通过水平或者垂直滚动来浏览大于视图可见区域的内容。</p>
<ol>
<li>滚动方式有三种：连续滚动、逐行滚动、逐页滚动。</li>
<li>让用户决定滚动条是否可见，避免控件于滚动条放在同一行。</li>
<li>不要覆盖默认滚动手势或键盘快捷键。要使用用户熟悉的滚动行为。</li>
<li>不要将滚动视图放在另一个滚动视图内。</li>
<li>执行逐页滚动时，滚动适当的数量。</li>
<li>单击滚动条轨道时，滚动适当的数量。</li>
<li>适当时执行自动滚动。如使用Command+F时查看文本时......</li>
<li>不要使用滚动条作为滑块。</li>
<li>有必要时，考虑在面板中使用小型或小型滚动条。</li>
</ol>
<h3 id="sheets-工作表">Sheets 工作表</h3>
<p>工作表时附加到特定窗口的对话框。</p>
<ol>
<li>在其他窗口上方打开工作表。一般位于最上方。</li>
<li>避免一次在窗口时显示多个工作表。</li>
<li>在多个窗口打开同一个文档时，需要使用应用程序模式对话框而不是工作表。</li>
<li>用户需要查看窗口或与窗口进行交互以解决对话框时，请使用面板而不是工作表。</li>
</ol>
<h3 id="sidebars-侧边栏">Sidebars 侧边栏</h3>
<p>侧边栏通常由一个表格视图或一个大纲视图组成，使人们可以浏览并选择要进行的操作。</p>
<ol>
<li>一般不要在侧边栏中显示两个以上的层次结构。</li>
<li>在侧边栏上使用正确的背景外观。不透明或者透明。</li>
<li>考虑在调整父窗口的大小时自动隐藏和显示侧边栏。</li>
<li>尽可能让用户自定义侧边栏的内容。</li>
<li>在可编辑的侧边栏中需要考虑提供用于添加、删除、操作或获取有关项目信息的按钮。</li>
</ol>
<h3 id="split-views-分割视图">Split Views 分割视图</h3>
<ol>
<li>合理时允许隐藏窗口。</li>
<li>提供多种访问窗格的方法。</li>
<li>设置适当的最小和最大窗格大小。</li>
<li>用户一般喜欢薄分割线的样式。</li>
</ol>
<h3 id="tab-views-标签视图">Tab Views 标签视图</h3>
<p>标签视图在同一区域中显示多个相互排斥的内容窗格。</p>
<ol>
<li>可以将选项卡控件放置在内容区域的任何一侧（上、下、左、右）</li>
<li>使用与内容密切相关的选项卡视图样式。</li>
<li>选项卡视图中提供两到六个选项卡。</li>
<li>确保窗格中的控件仅影响同一窗格中的内容。</li>
<li>为每个选项卡提供一个标签，以描述其窗格的内容。</li>
<li>避免将弹出按钮用作选项卡切换器。</li>
</ol>
<h3 id="table-views-表格视图">Table Views 表格视图</h3>
<p>表格视图在组织为列和行的单元格滚动列表中干净有效地呈现了少量或大量数据。</p>
<ol>
<li>允许用户点击列标题进行排序。</li>
<li>允许用户调整列的大小。</li>
<li>在多列表格中使用交替的行颜色。</li>
<li>可以允许用户对单元格数据进行编辑。</li>
<li>使用大纲视图而不是表视图来呈现层次数据结构。</li>
<li>使用居中的省略号来显示无法全部显示的文本。</li>
<li>提供搜索字段。</li>
</ol>
<h3 id="toolbars-工具栏">Toolbars 工具栏</h3>
<p>工具栏提供了对常用命令和功能的便捷访问，它位于窗口顶部的框架中，位于标题栏的下方或与标题栏集成在一起。</p>
<ol>
<li>仅使用工具栏特定的系统控件样式。</li>
<li>使每个工具栏都可作为菜单命令使用。</li>
<li>为每个工具栏提供简短的描述性标签。</li>
<li>确保每个工具栏项的含义都清楚。</li>
<li>在工具栏中，图标优先于文本。</li>
<li>当内容在工具栏下方流动时，需要使用半透明外观。</li>
<li>准确反映在两个状态之间切换控件的当前状态。</li>
<li>将工具栏项目按照逻辑进行分组。</li>
<li>允许用户显示或隐藏工具栏。</li>
<li>考虑在全屏模式时隐藏工具栏来增加用户对内容的关注。</li>
<li>允许用户自定义工具栏内容。</li>
<li>提供有用的默认工具栏项。</li>
</ol>
<h3 id="web-views-网页视图">Web Views 网页视图</h3>
<p>Web视图直接在应用程序中加载并显示丰富的Web内容。</p>
<ol>
<li>适当时启用前进和后退按钮。</li>
<li>避免使用Web视图来构建Web浏览器。不鼓励复制成浏览器。</li>
</ol>
<h3 id="drawers-抽屉">Drawers 抽屉</h3>
<p>抽屉是一种界面元素，其中包含与特定窗口有关的选项或信息。</p>
<h3 id="placards-标语牌">Placards 标语牌</h3>
<p>标语牌是出现在窗口底部边缘的一种视图。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Icons and Images 图标和图像]]></title>
        <id>https://POssichen.github.io/post/mac-os-icons-and-images-tu-biao-he-tu-xiang</id>
        <link href="https://POssichen.github.io/post/mac-os-icons-and-images-tu-biao-he-tu-xiang">
        </link>
        <updated>2020-02-08T11:01:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="image-size-and-resolution-图像尺寸和分辨率">Image Size and Resolution 图像尺寸和分辨率</h3>
<p>标准分辨率的显示器具有1:1像素密度（即@1x），高分辨率显示器为（@2x）</p>
<ol>
<li>以最大尺寸制作图片，然后按比例缩小尺寸。</li>
<li>使用8 x 8的网格。</li>
<li>以较低的分辨率预览高分辨率图像。</li>
</ol>
<h3 id="app-icon-应用程序图标">App Icon 应用程序图标</h3>
<ol>
<li>应用图标拟物化。</li>
<li>设计一个容易识别关联日常事物的图标。</li>
<li>应用图标尽可能简单。</li>
<li>设计带有中心点的图标，可以清楚标识应用。</li>
<li>iOS和Mac os版本的应用图标应该有所区别。</li>
<li>避免使用实际文本。</li>
<li>避免图标包含照片、屏幕截图或者界面元素。</li>
<li>不要使用Apple已有产品的图标。</li>
<li>图标需要具有适当的角度和逼真的阴影。</li>
<li>图标可以旋转9度以呈现。</li>
<li>在图标阴影中只使用黑色。</li>
<li>准确描绘真实物体。</li>
<li>考虑中图标的边缘添加一点光晕。</li>
<li>需要使用PNG格式，不可使用JPEG和ICNS格式。</li>
<li>应用图标的尺寸应该有5个尺寸。以@2x为例：32px、64px、256px、512px、1024px</li>
<li>以较小的尺寸简化图标。以确保它们保持清晰。</li>
<li>保持高分辨率和标准分辨率的图稿一致。在不同显示器之间拖动图标时，外观不该突然改变。</li>
</ol>
<h3 id="custom-icons-自定义图标">Custom Icons 自定义图标</h3>
<p>应用内的图标如果需要和系统图标不一样，那可以自定义图标。</p>
<ol>
<li>简单可识别。</li>
<li>程序中各个部分需保持图标一致。</li>
<li>避免图标中包含文本。</li>
<li>提供图标替代文本标签，方便障碍者更容易识别。</li>
<li>尽可能将图标创建为模版图像。以便于根据用户交互进行改变外观。</li>
<li>以PDF格式输出自定义图标。只有需要阴影、纹理、高光等复杂设计才建议使用PNG格式。</li>
<li>提供适当大小的图标。PDF只需要@1x，PNG需要@1x和@2x大小。</li>
<li>分段控件图标需要三个尺寸。@1x为例Regular-17px、Small-14x13px、Mini-12x12px。</li>
<li>设计具有透明性和适当详细的侧边栏图标。@2x为例图标大小有32px、36px、64px3个尺寸。</li>
<li>工具栏中不能同时使用控件图标和独立图标。</li>
<li>大多数工具栏中首选控件图标。</li>
<li>尽可能使用系统提供的控件图标。</li>
<li>设计具有透明度和适当详细程度的控制图标，@2x的尺寸为38px。</li>
<li>独立的工具栏图标的@2x尺寸为64px。</li>
</ol>
<h3 id="multi-item-drag-images-拖动多项目图像">Multi-Item Drag Images 拖动多项目图像</h3>
<ol>
<li>设计内容丰富的图像。</li>
</ol>
<h3 id="system-icons-系统图标">System Icons 系统图标</h3>
<ol>
<li>尽可能使用内置图标。</li>
<li>使用图标替代文本标签。</li>
<li>如果找不到满足需求的系统图标，可以自行设计一套图标。</li>
<li>仅在带边框的控件中使用控件图标。</li>
<li>一般可以直接调用API使用图标。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Visual Design 视觉设计]]></title>
        <id>https://POssichen.github.io/post/mac-os-visual-design-shi-jue-she-ji</id>
        <link href="https://POssichen.github.io/post/mac-os-visual-design-shi-jue-she-ji">
        </link>
        <updated>2020-02-08T06:04:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="animation-动画">Animation 动画</h3>
<ol>
<li>追求显示主义。现实的运动可以帮助人们了解事物的运作方式。</li>
<li>避免将动画用于频繁发生的交互。重复出现的动画会导致用户认为动画降低了效率。</li>
<li>增强反馈和理解。例如最小化窗口时不是突然消失，而是从屏幕流畅地移动到Dock，以便用户知道它的去向。</li>
<li>中对象之间平滑过度。</li>
<li>暗示结果。例如将一个项目拖到Dock栏，其他项目会移动到一边，显示即将放置的位置。</li>
<li>确保全屏模式过渡动画流畅。</li>
<li>明智地使用动画和动作效果。</li>
<li>将动画设置为可选。</li>
</ol>
<h3 id="color-颜色">Color 颜色</h3>
<ol>
<li>明智地使用颜色进行交流。</li>
<li>在不同国家使用适当含义的颜色。</li>
<li>避免使用存在歧义的颜色。</li>
<li>考虑半透明颜色的使用场景。</li>
<li>在各种光照条件下测试应用的配色方案。</li>
<li>允许用户使用标准的颜色面板来更改颜色。</li>
<li>不要在应用程序中对系统颜色进行硬编码。</li>
<li>不要重新定义系统颜色的定义。</li>
</ol>
<h3 id="dark-mode-黑暗模式">Dark Mode 黑暗模式</h3>
<ol>
<li>确保所有外观都具有足够的色彩对比度。</li>
<li>柔化白色背景的颜色。</li>
<li>尽可能使用模版影像。</li>
<li>使用系统提供的标签颜色来显示文本。</li>
<li>使用系统视图绘制静态文本。</li>
</ol>
<h3 id="translucency-半透明">Translucency 半透明</h3>
<ol>
<li>首选系统提供的元素和颜色。</li>
<li>使用系统模版图像。</li>
</ol>
<h3 id="typography-版式">Typography 版式</h3>
<ol>
<li>使用字体粗细、大小和颜色突出显示应用程序中最重要的内容。</li>
<li>确保自定义字体清晰易读。</li>
<li>使用正确的字体变体。</li>
<li>使用标准的字体面板更改用户字体。</li>
<li>使用动态系统字体变体来匹配标准控件的文本外观。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os System Capabilities 系统能力]]></title>
        <id>https://POssichen.github.io/post/mac-os-system-capabilities-xi-tong-neng-li</id>
        <link href="https://POssichen.github.io/post/mac-os-system-capabilities-xi-tong-neng-li">
        </link>
        <updated>2020-02-08T05:20:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="auto-save-自动保存">Auto Save 自动保存</h3>
<p>基于文档的应用程序应该实现自动保存功能，减少编辑时的工作，使用户更加注重于内容的创建。启用“自动保存”后，每小时至少自动保存一次文档版本，并且在每次打开、复制、锁定、重命名、还原和手动保存文档时，都会自动保存该文档的版本，用户可以随时浏览这些保存的版本并恢复。</p>
<ol>
<li>如果应用程序基于文档，应该启用自动保存。</li>
<li>只有在用户明确尝试保存或者关闭包含未保存内容的文档时，才显示“保存”对话框。</li>
<li>只有在无法自动保存修改的文档时，才使用未保存标记进行标记。</li>
<li>禁用自动保存后，如果未保存更改，那么应用应该表现出预期的行为。</li>
</ol>
<h3 id="dock-底栏">Dock 底栏</h3>
<ol>
<li>创建和调整窗口时，请考虑Dock的位置。以免发生重叠。</li>
<li>当用户单击Dock的应用图标时，激活一个窗口。</li>
<li>应用程序指示器并不是在Dock中总是可见的。</li>
<li>Dock图标只有在发生严重性问题时才会发生弹跳。</li>
<li>圆点通知仅用于通知的目的。</li>
<li>避免警报与圆点通知一起使用。</li>
<li>不要模仿圆点通知的外观或行为。</li>
</ol>
<h3 id="finder-文件夹">Finder 文件夹</h3>
<p>Finder用来访问Mac os的文件系统。</p>
<ol>
<li>确保应用程序的文件拓展名为.app。</li>
<li>确保文件使用适当的文件拓展名。</li>
<li>如果创建了一个罕见的文档，需要提供快速查找生成器。</li>
<li>准确一致地报告磁盘使用情况和文件大小。</li>
<li>避免更改现有文件的类型。</li>
</ol>
<h3 id="mission-control-任务控制">Mission Control 任务控制</h3>
<ol>
<li>遵守进入任务控制的手势。</li>
<li>为适应环境变化做好准备。</li>
</ol>
<h3 id="notifications-通知事项">Notifications 通知事项</h3>
<ol>
<li>提供有用的信息通知。</li>
<li>即使用户没有响应，也不要为同一件事发送多个通知。</li>
<li>不要包含应用名称或图标。</li>
<li>选择适当的默认通知样式。</li>
<li>提供声音来补充通知。</li>
<li>一条通知最多可以包含两个操作按钮。</li>
</ol>
<h3 id="printing-打印">Printing 打印</h3>
<ol>
<li>使打印按钮更容易方便使用，避免与工具栏混淆。</li>
<li>仅在可以打印时启用打印。</li>
<li>将修改的打印页面设置与文档一起存储。</li>
<li>使用系统提供的对话框。</li>
<li>将高级功能与常用功能分开。</li>
<li>预览图尽可能显示设置更改的效果。</li>
</ol>
<h3 id="quick-look-快速浏览">Quick Look 快速浏览</h3>
<ol>
<li>使用快速浏览时无需离开应用。</li>
</ol>
<h3 id="ratings-and-reviews-评分和评论">Ratings and Reviews 评分和评论</h3>
<ol>
<li>在用户清楚地了解应用的价值时，再要求进行评级。</li>
<li>在用户最有可能感到满意的时候询问等级。</li>
<li>在要求反馈时不要破坏用户体验。</li>
</ol>
<h3 id="search-and-spotlight-搜索和聚焦">Search and Spotlight 搜索和聚焦</h3>
<ol>
<li>使应用内容支持搜索。</li>
<li>考虑在后台使用Spotlight。</li>
<li>参照Search Kit的API来完成搜索功能。</li>
<li>使用搜索字段和范围栏可以在视图中启用内容过滤。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os User Interaction 用户互动]]></title>
        <id>https://POssichen.github.io/post/mac-os-user-interaction-yong-hu-hu-dong</id>
        <link href="https://POssichen.github.io/post/mac-os-user-interaction-yong-hu-hu-dong">
        </link>
        <updated>2020-02-07T12:38:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="authentication-认证方式">Authentication 认证方式</h3>
<ol>
<li>尽可能延迟登陆。用户在不得不做任何有用的操作前被迫登陆通常会选择放弃应用程序。</li>
<li>说明身份验证的好处以及如何注册服务。</li>
</ol>
<h3 id="data-entry-数据输入">Data Entry 数据输入</h3>
<p>无论是使用键盘、鼠标、触控板还是语音，输入信息都可能是一个乏味且容易出错的过程。</p>
<ol>
<li>让人们尽可能地做出选择。考虑使用表格、弹出按钮或者单选按钮组替代文本字段。使数据输入的更快更高效。</li>
<li>简化列表导航。</li>
<li>使用介绍性标签或文本来达到帮助目的。</li>
<li>适当调整文本字段换行符。</li>
<li>考虑使用拓展工具提示来显示已剪切或截断的文本。</li>
<li>适当使用安全的文本字段。如输入密码时。</li>
</ol>
<h3 id="prepopulating-data-预填充数据">Prepopulating Data 预填充数据</h3>
<ol>
<li>尽可能从系统获取信息。尽量不要强迫人们提供可以自动收集或在用户许可下收集。</li>
<li>提供合理的默认值。</li>
<li>不要预先填充密码字段</li>
<li>确保应用填充数据的准确性</li>
</ol>
<h3 id="validating-data-验证数据">Validating Data 验证数据</h3>
<ol>
<li>仅在必要时才需要字段值。</li>
<li>推迟显示必填指示符。</li>
<li>动态验证字段值。尽可能在输入后立即检查字段值，以便用户立即进行改正</li>
</ol>
<h3 id="drag-and-drop-拖放">Drag and Drop 拖放</h3>
<ol>
<li>尽可能使拖放操作可逆。</li>
<li>确定拖放的结果是移动还是复制。</li>
<li>尽可能让人们一步选择并拖动内容。</li>
<li>用户可以在非活动窗口拖动选定内容。</li>
<li>拖动图像时在指针下方显示拖动图像。</li>
<li>在多项目拖动过程中显示项目数量。</li>
<li>明确指出何时无法删除。</li>
<li>将内容拖到新目标上方时，突出显示该目标。</li>
<li>插入拖放时显示拖放内容出现的位置。</li>
<li>如果拖放失败，则使用预期的动画。</li>
<li>完成无法撤销拖放操作前请确认。</li>
</ol>
<h3 id="file-handling-文件处理">File Handling 文件处理</h3>
<p>用于用户与文件系统进行交互以打开和保存文件</p>
<ol>
<li>确定打开的是工作表还是独立窗口。</li>
<li>默认保存为合理位置。如果启用了iCloud同步，那iCloud文件夹通常为最佳默认位置。</li>
<li>考虑添加描述性标题或消息。</li>
<li>让人们以预期的方式打开文档。</li>
<li>尽可能允许选择多个文件。</li>
<li>尽量包含合理的过滤器，以便用户选择所需要的文件。</li>
</ol>
<h3 id="help-帮助">Help 帮助</h3>
<p>用户有时需要帮助来学习高级和辅助功能，可以通过帮助标签和Apple帮助的形式提供帮助。</p>
<ol>
<li>避免限制用户操作。</li>
<li>尽描述指针正下方的控件。</li>
<li>将帮助标签添加到特定于应用程序的控件中</li>
<li>尽可能少的单词来描述控件。</li>
<li>考虑提供上下文相关的帮助标签。</li>
<li>提供基于任务的描述。</li>
</ol>
<h3 id="keyboard-键盘">Keyboard 键盘</h3>
<ol>
<li>遵守标准的键盘快捷键。</li>
<li>为标准菜单项启用预期的键盘快捷键。</li>
<li>请勿覆盖标准键盘快捷键。</li>
<li>保留预期的键盘快捷键。</li>
</ol>
<h3 id="mouse-and-trackpad-鼠标和触控板">Mouse and Trackpad 鼠标和触控板</h3>
<ol>
<li>使用标准控件和视图。</li>
<li>根据上下文和含义对点击和手势做出响应。</li>
<li>避免重新定义系统范围内的应用间手势。</li>
<li>避免重新定义反馈的类型。</li>
</ol>
<h3 id="providing-user-feedback-提供用户反馈">Providing User Feedback 提供用户反馈</h3>
<ol>
<li>将状态和其他类型的反馈集成到界面中。</li>
<li>可能导致数据意外丢失时警告他们。</li>
<li>告诉用户什么时候不能执行命令。</li>
</ol>
<h3 id="requesting-permission-请求权限">Requesting Permission 请求权限</h3>
<ol>
<li>仅在应用明确需要时才请求个人数据。</li>
<li>请求时需说明为何需要这些信息。</li>
<li>仅在应用运行时才请求权限。</li>
<li>不要请求不必要的位置信息。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os App Architecture 应用架构]]></title>
        <id>https://POssichen.github.io/post/mac-os-app-architecture-ying-yong-jia-gou</id>
        <link href="https://POssichen.github.io/post/mac-os-app-architecture-ying-yong-jia-gou">
        </link>
        <updated>2020-02-07T08:14:43.000Z</updated>
        <content type="html"><![CDATA[<p>Mac os App Architecture 应用架构</p>
<h3 id="full-screen-mode-全屏模式">Full-Screen Mode 全屏模式</h3>
<p>全屏模式下的应用程序窗口提供了无干扰的工作环境。工具栏、菜单栏以及其他控件通常是在用户要求时才显示和隐藏，例如移动指针到屏幕顶部，而在配备了touch bar的型号上通常可以通过bar来访问常用的功能，而无需用户移动指针到顶部。</p>
<ol>
<li>仅在合理的情况下启用全屏窗口。并非所有应用窗口都需要沉浸展示，有些应用与其他程序一起使用时效果会更好，例如Mac自带的计算器、标签。将iOS应用程序移植到Mac时，请勿假定该程序必须在Mac中支持全屏模式。</li>
<li>工具栏在需要时可见，但焦点在内容上时需要隐藏。开发者可以设置全屏窗口时始终显示工具栏，也可以设置将指针移动至顶部时才显示，“日历”全屏时始终显示工具栏，“Typora”全屏时隐藏工具栏，以便用户专注于阅读和查看内容。</li>
<li>保留对基本功能的访问权限。即确保所有必须工具在全屏环境中依然可用，用户应该能够完成任务而不退出全屏模式。</li>
<li>与外部文件的高效交互。用户在不退出全屏模式的情况也可以打开外部文件、导入外部图像、保存文件......</li>
<li>充分利用屏幕空间，同时确保界面平滑过度。全屏显示时，窗口的宽度和长度都会适当增加，应该巧妙的调整页面的比例，使窗口更好地适合空间。</li>
<li>遵守进入任务控制的手势。触控板的手势应该始终有效，用户依然可以在应用全屏的时候进行切换其他桌面及程序......</li>
<li>用户离开应用程序时，要做出适当的响应。用户离开后返回您的应用程序后，应该能够从上次中断的地方继续。如影片的自动暂停......</li>
<li>让用户选择何时退出全屏模式。用户切换到另一个应用程序完成活动时，应该避免自动退出全屏模式。</li>
<li>保留Dock的访问权限。即用户在应用的全屏模式下应该保留下方Dock的访问权限，以便用户可以快速打开应用程序和其他Dock项目。</li>
</ol>
<h3 id="loading">Loading</h3>
<p>用户在使用应用执行命令时如果应用显示空白或者静态内容，但是并没有出现反馈，用户会认为该应用以及失去响应</p>
<ol>
<li>提供用户交互的既时确认。通常用户希望每次与您的应用互动时都可以收到反馈，例如点击按钮时获得的视觉反馈，指针在移动时的动画变化。应用为用户的交互提供的反馈速度也快那么用户就认为这个应用越快越流畅。</li>
<li>帮助人们确定这个过程需要花费多长时间。用户可能并不是需要确切地知道任务将花费多长时间，但是对完成时间的估算很重要。至少要显示一个活动微调器，表示正在发生某种事情，有时也可以进度指示器的基础上加入文本的描述。例如Finder的复制粘贴时会显示进度条以及剩下的时间</li>
<li>尽快显示内容。应该在尚无内容的地方显示一些占位文本，图形或者动画，并在内容加载时替换这些元素</li>
</ol>
<h3 id="onboarding">Onboarding</h3>
<p>启动页面是与新加入用户或者回访者建立联系的第一个机会。</p>
<ol>
<li>避免事先询问设置信息。人们首先期望应用程序可以正常运行，用户可以自行通过首选项调整来满足他们的需求。如果必须询问设置信息，那么请到实际使用情况时再进一次提示。</li>
<li>建立适用于大多数人的默认配置。尽可能使用户不需要调整默认设置。</li>
<li>避免教程和说明。不要使用户觉得应用使用起来很困难，应该让用户直接进入使用，如果应用程序需要教程那么就需要提供跳过的方法，并且不会向老用户显示。</li>
<li>预期帮助。主动寻找用户可能需要帮助的场景，并且在适当的时候显示提示，如果用户错过一次某些内容，确保用户可以重复访问教程。</li>
<li>使学习变得有趣且容易发现。边做边学会比阅读一系列的说明会更加有趣和有效，使用动画和互动性逐步进行教学，同时避免屏幕截图式教学。</li>
<li>提供综合帮助。将帮助标签添加到特定的控件之中。</li>
<li>自动保存用户的工作。用户希望自己的工作能不断保存，且无需干预，如果应用程序基于文档，那么自动保存非常有必要</li>
<li>始终准备停止并重新启动。大多数用户并不会区分关闭应用程序的主窗口和退出应用程序，如果该应用程序只有一个窗口，则在用户关闭窗口时自动退出。</li>
</ol>
<h3 id="preferences-首选项">Preferences 首选项</h3>
<p>首选项是用户定义的设置，用户调整首选项以自定义应用程序的外观和行为。例如Finder可以自定义桌面和侧边栏的外观、文件扩展名的显示......</p>
<ol>
<li>提供一组有用的首选项。避免包括用于配置应用程序各个方面的首选项。相反，应该专注于人们实际想要修改的功能和外观属性。</li>
<li>提供特定于应用程序的首选项。用户希望全局管理某些设置，如侧边栏的图标大小、自动保存。这些设置已经可以在系统偏好设置，为确保一致性和避免混淆，首选项不应该包含会导致其行为与系统中其他所有应用程序不同的首选项。</li>
<li>减少常用设置，如果用户经常性要使用的配置，请在浮动浮动面板中公开这些设置，以便用户可以打开并保持在屏幕上以快速访问。</li>
</ol>
<h3 id="preferences-window-首选项窗口">Preferences Window 首选项窗口</h3>
<p>首选项窗口是一个无模式对话框，用于调整应用程序的首选项。通常首选项窗口包含一个工具栏，该工具栏包含用于在设置组间切换的按钮。</p>
<ol>
<li>即时应用首选项的更改。用户期望首选项在更改后立刻生效。</li>
<li>禁用最小化和缩放按钮。“偏好设置”窗口用于偶尔调整应用程序行为，因此无需调整窗口的大小和长时间保持打开状态。</li>
<li>确保工具栏始终可见且不可自定义。</li>
<li>恢复上次查看的首选项窗格。如果用户切换首选项窗格，则应用应记住此更改并在用户下次打开首选项窗口是立即显示相同的窗格。</li>
</ol>
<h3 id="restoring-state-恢复状态">Restoring State 恢复状态</h3>
<p>重新启动应用程序时，人们无需追溯步骤即可恢复之前的任务。</p>
<ol>
<li>保留并恢复应用状态。在重新启动时打开所有文档和窗口的大学和位置</li>
<li>按预期配置重新打开窗口。应恢复侧栏的可见性和拆分视图的大小。</li>
</ol>
<h3 id="security">Security</h3>
<ol>
<li>避免仅依靠密码进行身份验证。应该充分利用Touch ID等技术。</li>
<li>将敏感信息存于钥匙串中。</li>
<li>切勿将密码或其他内容存于纯文本文件中。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac os Visual Index 视觉指数]]></title>
        <id>https://POssichen.github.io/post/mac-os-visual-index</id>
        <link href="https://POssichen.github.io/post/mac-os-visual-index">
        </link>
        <updated>2020-02-07T03:55:33.000Z</updated>
        <content type="html"><![CDATA[<p>大多数Mac os都是使用了AppKit组建构建的，AppKit是一种定义通用接口元素的编程框架，所以Mac os中得以实现一致的程序外观，不过Apple官方也提供了高级别的自定义功能。</p>
<h3 id="窗口和视图">窗口和视图</h3>
<p>窗口包含一个或者多个视图，其中包含人们看到的文本内容、图形、动画以及交互；</p>
<ol>
<li>Alert——显示消息的通知，错误或者警告</li>
<li>Box——为控件、文本框和其他元素的逻辑分组</li>
<li>Column view——垂直列显示文件数据层次的导航窗口</li>
<li>Outline view——在滚动列表中以层次结构显示行数据</li>
<li>Image view——在透明或者不透明的背景上显示单个图像或动画序列</li>
<li>Panel（HUD-style）——在高度视觉或沉浸式应用程序中显示与活动文档有关的信息</li>
<li>Panel（standard）——显示与活动文档有关的信息、选项或控件</li>
<li>Popover——单击控件或视图时，在屏幕上方显示控件、选项或信息</li>
<li>Scroll view——通过水平和垂直滚动，可以浏览大于可见区域的内容</li>
<li>Sheet——附加到窗口的模式对话框中显示控件，选项或信息</li>
<li>Sidebar——侧边栏出现在窗口的一侧，可以选择需要操作的项目</li>
<li>Split view——拆分视图用于管理两个或者多个内容窗格的呈现</li>
<li>Tabview——标签视图在同一区域内显示多个内容窗格</li>
<li>Table view——在单元格的滚动列表显示数据</li>
<li>Toolbar——工具栏提供对应用程序窗口中常用命令和功能的快速访问</li>
<li>Web view——加载并显示丰富的Web内容</li>
<li>Window——由框架区域和主体区域组成，可用于查看应用程序的内容并与之交互</li>
</ol>
<h3 id="菜单">菜单</h3>
<ol>
<li>Contextual menu——上下文菜单通过Control键单击某个项目显示，提供常用命令访问</li>
<li>Dock menu——停靠菜单通过右键点击Dock图标显示，提供系统对应的命令访问</li>
<li>Menu bar menu——菜单栏菜单用于访问特定应用程序的命令，位于左上角</li>
</ol>
<h3 id="按钮">按钮</h3>
<ol>
<li>Action button——动作按钮通常在工具栏或者表格下找到，提供常用命令访问</li>
<li>Checkbox——多选框</li>
<li>Disclosure button——显示和隐藏与特定控件相关的功能，例如“保存”中的“另存为”</li>
<li>Disclosure triangle——显示和隐藏相关的信息或功能</li>
<li>Gradient button——一般用于删除或添加表行</li>
<li>Help button——帮助按钮</li>
<li>Image button——图像按钮一般包含图标或图像</li>
<li>Pop-up button——弹出按钮显示包含互斥选项列表的菜单</li>
<li>Pull-down button——下拉按钮显示命令列表或启用一个或多个状态的选择</li>
<li>Push button——点击按钮</li>
<li>Radio button——单选按钮</li>
<li>Scope button——范围按钮限制视图中内容的范围，例如搜索结果</li>
</ol>
<h3 id="字段和标签">字段和标签</h3>
<ol>
<li>Combo box——组合框在单个控件中将文本字段与下拉按钮结合到一起</li>
<li>Label——标签描述屏幕上的元素或提供短信息</li>
<li>Search field——搜索框用于文本搜索</li>
<li>Text field——文本域允许用户输入和编辑一行或多行文本</li>
<li>Token field——令牌字段允许用户输入和编辑令牌，属于可操作类文本块</li>
</ol>
<h3 id="选择器">选择器</h3>
<ol>
<li>Color well——颜色面板用于颜色选择</li>
<li>Date pocker——日期选择器用于时间或日期的文本或图形选择</li>
<li>Image well——图像面板用于编辑图像，支持拖放、删除、复制和粘贴</li>
<li>Path control——路径控制，显示所选文件或文件夹的文件系统路径</li>
<li>Segmented control——分段控制是两个或多个段的水平集合，用于影响对象的状态视图</li>
<li>Slider——滑块有水平、垂直和圆盘样式，在值的范围内进行选择</li>
<li>Stepper——步进器用于数字、日期或时间值的递增和递减</li>
</ol>
<h3 id="指标">指标</h3>
<ol>
<li>Capacity indicator（continiuous）连续容量显示器，以填充轨迹说明容量</li>
<li>Capacity indicator（discrete）离散容量指示器，以矩形块说明容量</li>
<li>Progress bar——进度条</li>
<li>Progress circle——进度圈</li>
<li>Progress spinner——进度微调器用于显示无法量化的任务执行进度动画</li>
<li>Rating indicator——使用一系列水平排列的图形符号来表达等级</li>
<li>Relevance indicator——用一系列竖线传达相关性</li>
</ol>
<h3 id="触控板控制和视图">触控板控制和视图</h3>
<ol>
<li>Button——按钮</li>
<li>Candidate list——候选列表，在文本输入过程中的自动提示</li>
<li>Character picker——表情选择器</li>
<li>Color picker——颜色选择器</li>
<li>Popover——弹窗，以按钮样式呈现，点击后显示包含的控件按钮</li>
<li>Scrubber（fixed）——滑动浏览固定的内容</li>
<li>Scrubber（free）——滑动浏览会变化的内容</li>
<li>Segmented control——分段控制是两个或多个段的水平集合，用于影响对象的状态视图</li>
<li>Sharing service picker——共享服务选择器，用于分享信息</li>
<li>Slider——滑块有水平、垂直和圆盘样式，在值的范围内进行选择</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电脑与个人生产力 — 需求剖析]]></title>
        <id>https://POssichen.github.io/post/dian-nao-yu-ge-ren-sheng-chan-li-xu-qiu-pou-xi</id>
        <link href="https://POssichen.github.io/post/dian-nao-yu-ge-ren-sheng-chan-li-xu-qiu-pou-xi">
        </link>
        <updated>2020-01-31T16:06:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="起因">起因</h3>
<p>​我个人是对屏幕的细腻度有着超高要求的用户，尤其是在经过两个月的 4K 显示器惯坏的情况下，使用起自己手里的这台刷了黑苹果的小米笔记本会有各种说不出的难受，但是这种难受并不是完完全全的生理上的难受，而是经过心理上的放大后的难受，说白了就是心理障碍。由于屏幕是基础的1080P屏幕，在长时间的网页观看时会出现花纹情况，哪怕是在13寸的屏幕上，PPI也不过是165.63，相比起来手机的326、MacBook系列的226，差的不多，但是也有明显的差距，在不开hidpi的情况下完全没法看（这是个人感觉），实际上开了之后还是有很大的改进，勉勉强强可以看，但是心理上非常不舒服，一直催眠自己觉得屏幕还是没法看，觉得需要去换个高PPI的屏幕，外接一个4K屏幕，还有就是重新购入一台Mac，来满足自己眼睛的要求，表面上我的需求是需要一个更高PPI、更高分辨率的屏幕，这样子我才能更好地完成我的毕业论文，写出更好的Blog文章，才能显得更有生产力，显而易见这些都是我在觉得自己屏幕不好的基础上臆想出来的，虽然屏幕真的不太好，但是这并不应该影响能干的事情。而实际上，我是因为长时间的观看白色背景的网页，由于屏幕的白色不够纯和太亮而导致的疲劳，所以我觉得我的实际核心需求是长时间观看网页、文字不疲劳。</p>
<h3 id="过程">过程</h3>
<p>​这个想法的过程并不是很快地出现又很快的消失，它整整困扰了我一个星期，我甚至都想到了好几种解决的方案：</p>
<ol>
<li>第一种方案是购入一个15.6寸的4K便携显示器，这有着超高的PPI显示效果，同时有着相对便携的属性，令我一度倾心，但是沉下心来思考一番就会发现这个屏幕的便携是一个伪需求，显示器的重量重达1kg，而我的笔记本重量也不过1.25kg，两者相加起来比今年的Macbook Pro 16'' 还要中出个0.25kg，去实体店里体验过16寸笔电的我已经打消了带着这么重的配件通勤，所以就意味着它只会呆在一个位置，移动的频率其实是非常低的（对于我而言，我对比了多个可能会移动的路径），同时它和下面要讲到的大屏显示器在价格上没有任何优势，在显示范围上更是没有优势，唯二的优势是在搬家时更容易移动以及更高的PPI显示。</li>
<li>第二种方案是购入一个24/27寸的4K显示器，在尺寸和分辨率上有着不错的显示效果，由于使用过2个月的27寸屏幕，给我的感觉就是看不完整个屏幕，同样由于尺寸的提高，PPI只有可怜的163.18，所以就会出现远看看不起，近看看不完的尴尬场面，同时在搬家、迁居的这种搬运场景之下简直是灾难，体验过第一次的我绝对不想体验第二次。并且由于屏幕的过大，在娱乐方面有明显的加持效果，而在工作生产力上（特指目前个人的绘图、写作情况）给我的感觉并没有手里的13寸屏幕来的顺手，就是太大了，并且在隐私上的作用几乎为零，你在干嘛别人一掉头就能发现，对于我这种非常重视隐私的人来说是个大问题。而24寸的屏幕大小并不能说是恰到好处，但是也绝对不是27寸那么尴尬，根据手里的24寸1080P的显示器对比而言，使用起来还是相对舒服的，但是它同样面临着一个携带转移的问题。</li>
<li>第三种方案是直接购入一个带有Retina屏幕的MacBook产品，这个方案既可以解决黑苹果带来的体验上的不便（蓝牙、网卡、触控板偶尔失灵、多设备联动等问题），也能让我感受到高品质的屏幕效果体验，看起来是非常完美的一个解决方案，但是也有一些并不能让我服服帖帖掏钱的地方，第一个就是售价问题，当然这是我的问题，而不是它的问题，第二个是屏幕设计上，在我看完新的iPad pro之后，看MacBook Air老是会觉得边框有点宽，相比最新的xps系列电脑可以说是被吊到墙上鞭打了，不过辩证而言，我在使用同款的边框大小的小米笔记本时，我的注意力并没有注意到边框的大小，注意力的95%都是集中在屏幕上，就意味着这个因素的影响并不大，只是我的心里对美的要求导致我觉得它不够完美。</li>
</ol>
<h3 id="结果">结果</h3>
<p>​最令我兴奋的事情是我成功地透过了表面的需求找到了核心的需求，我并不是需要更高的PPI显示，而是需要长时间舒适的观看体验，就算是换上了4K显示器，盯着好几个小时的白纸黑字界面肯定也是同样的疲劳，所以我需要的是找到将白色背景换成黑色的方法，调低字体和背景的对比度，这样就能获得相对不错的观看体验。与此同时，因为屏幕观感不好而觉得需要更新设备来完成任务的疑惑也豁然开朗，新设备、新工具只是一个借口，这个借口既是购买新设备的，也是拖延本可以在现有设备上完成任务的，我不会因为购买了一台新的MacBook就会把Blog写的更好，将Apple的人机交互逻辑练习的更好，也不会因为购买了一块新的便携屏幕就能把毕业论文写的更好，把想学习的东西学的更好。唯一能让它们变得更好的方法就是在现在有的设备中马上开始动手，开始练习，不再拖沓和找借口。就像影视飓风的Tim说的“工具它永远是一个工具，关键是你怎么去用它”，同样还有另外一句，“生产力工具本身并不具有生产力，关键是看使用的人是否带有生产力”。现在给我一台全新的顶配Mac pro，在我手里也发挥不出应该有的价值；而在一些人的手里，哪怕是最基础的电脑加剪辑软件，都可以完成出一份优秀的作品。</p>
<p>​当然，电脑换还是要换的，但是需要做的东西不应该等到换到了电脑再来做，而是应该在完成事情的同时为了更好的使用体验，可以加快效率时再更新设备，不可本末倒置。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown知识总结]]></title>
        <id>https://POssichen.github.io/post/markdown-ji-qiao-zong-jie</id>
        <link href="https://POssichen.github.io/post/markdown-ji-qiao-zong-jie">
        </link>
        <updated>2020-01-26T08:27:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="表格">表格</h3>
<pre><code>| 表头 | 表头 |
| ---- | ---- |
| 单元格 | 单元格 |
| 单元格 | 单元格 |
</code></pre>
<hr>
<h3 id="分隔线">分隔线</h3>
<pre><code>***
* * *
*****
- - -
----------
</code></pre>
<hr>
<h3 id="删除线">删除线</h3>
<pre><code>~~要划掉的文字~~
</code></pre>
<hr>
<h3 id="下划线">下划线</h3>
<pre><code>&lt;u&gt;带下划线文本&lt;/u&gt;
</code></pre>
<hr>
<h3 id="脚注">脚注</h3>
<pre><code>例子[^1]
[^1]: www.google.com
</code></pre>
<hr>
<h3 id="代码">代码</h3>
<pre><code>`代码`
``` 语言名称
</code></pre>
<hr>
<h3 id="强调">强调</h3>
<pre><code>**加粗文本**   或   __加粗文本__
*斜体文本*   或   _斜体文本_
</code></pre>
<hr>
<h3 id="引用">引用</h3>
<pre><code>&gt; 一级引用
&gt;&gt; 二级引用
&gt;&gt;&gt; 三级引用
</code></pre>
<hr>
<h3 id="无序列表">无序列表</h3>
<pre><code>- xxxxx
* xxxxx
+ xxxxx
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML知识总结]]></title>
        <id>https://POssichen.github.io/post/html-zhi-shi-zong-jie</id>
        <link href="https://POssichen.github.io/post/html-zhi-shi-zong-jie">
        </link>
        <updated>2020-01-26T07:41:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1-字体样式及颜色">1. 字体样式及颜色</h3>
<pre><code>&lt;font face=&quot;微软雅黑&quot; color=&quot;pink&quot; size=&quot;3&quot;&gt;字体及字体颜色和大小&lt;/font&gt;
&lt;font color=&quot;#0000ff&quot;&gt;字体颜色&lt;/font&gt;
</code></pre>
<hr>
<h3 id="2-文本对齐方式">2. 文本对齐方式</h3>
<pre><code>&lt;p align=&quot;left&quot;&gt;居左文本&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;居中文本&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;居右文本&lt;/p&gt;
</code></pre>
<hr>
<h3 id="3-换行">3. 换行</h3>
<pre><code>换行&lt;br/&gt;
</code></pre>
<hr>
<h3 id="4-下划线">4. 下划线</h3>
<pre><code>&lt;u&gt;下划线文本&lt;/u&gt;
</code></pre>
<hr>
<h3 id="5-小鹅鹅">5. 小鹅鹅</h3>
<pre><code>&lt;u&gt;下划线文本&lt;/u&gt;
</code></pre>
]]></content>
    </entry>
</feed>